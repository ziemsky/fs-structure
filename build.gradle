
buildscript {
    repositories {
        mavenLocal()
    }
}

plugins {
    id 'groovy'
    id 'maven'
    id 'maven-publish'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.3.0'

    id 'idea'
}

group 'com.ziemsky.fsstructure'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    groovyVersion = '2.4.13'
    spockVersion = '1.1-groovy-2.4-rc-4'
}

subprojects {
    version = rootProject.version
}

repositories {
    mavenCentral()
}

sourceSets {
    testUtils { // common test resources used by all other test sourceSets
        compileClasspath += sourceSets.main.output.classesDirs
    }

    integration

    functional
}

// Fixes problem of disappearing designations of test sources roots in custom sourceSets, following
// https://youtrack.jetbrains.com/issue/IDEA-151925#comment=27-2355076
idea {
    module {
        testSourceDirs += project.sourceSets.integration.groovy.srcDirs \
                        + project.sourceSets.integration.resources.srcDirs \
                        + project.sourceSets.functional.groovy.srcDirs \
                        + project.sourceSets.functional.resources.srcDirs
    }
}
idea.module.testSourceDirs.containsAll(sourceSets.integration.allJava.srcDirs)
idea.module.testSourceDirs.containsAll(sourceSets.functional.allJava.srcDirs)

dependencies {
    compile("commons-io:commons-io:2.5")

    testUtilsCompile("org.codehaus.groovy:groovy-all:${groovyVersion}")

    testCompile sourceSets.testUtils.output
    testCompile("org.codehaus.groovy:groovy-all:${groovyVersion}")
    testCompile("org.spockframework:spock-core:${spockVersion}") {
        exclude module: 'groovy-all'
    }
    testCompile('org.apache.commons:commons-lang3:3.5')

    integrationCompile sourceSets.main.output
    integrationCompile sourceSets.testUtils.output
    integrationCompile("org.codehaus.groovy:groovy-all:${groovyVersion}")
    integrationCompile("org.spockframework:spock-core:${spockVersion}") {
        exclude module: 'groovy-all'
    }

    functionalCompile sourceSets.main.output
    functionalCompile sourceSets.testUtils.output
    functionalCompile("org.codehaus.groovy:groovy-all:${groovyVersion}")
    functionalCompile("org.spockframework:spock-core:${spockVersion}") {
        exclude module: 'groovy-all'
    }
}


task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functional.output.classesDirs
    classpath = sourceSets.functional.runtimeClasspath
}

integrationTest.mustRunAfter(test)
functionalTest.mustRunAfter(test, integrationTest)
check.dependsOn(test, integrationTest, functionalTest, jacocoTestCoverageVerification, 'pitest')
jacocoTestCoverageVerification.mustRunAfter tasks.findAll { it.name.toLowerCase().endsWith('test') && !it.name.toLowerCase().equalsIgnoreCase('pitest')}
tasks.find({it.name == 'pitest'}).mustRunAfter jacocoTestCoverageVerification


defaultTasks 'keyTasks'

task keyTasks {

    group 'help'

    description 'Prints out the most often used tasks in daily development and other basic build info.'

    doLast {
        logger.quiet('''
                     |============================================================================
                     |
                     |    Project: {}
                     |    
                     |             {}
                     |
                     | Key tasks:
                     |
                     |    check               - Runs all tests - unit, integration, and acceptance.
                     |    test                - Runs unit tests.
                     |    integrationTest     - Runs integration tests.
                     |    functionalTest      - Runs acceptance tests.
                     |    
                     |    publishToMavenLocal - Packages and publishes the plugin to local Maven repository. 
                     |    
                     |    tasks               - All tasks available in this build.
                     |    help                - Gradle help.
                     |
                     |    To execute any of the above TASKs, navigate to the root directory of this project and execute:
                     |
                     |                   ./gradlew TASK
                     |
                     |    To attach debugger to running tests, add '-Dtest.debug' when executing a test task and connect debugger
                     |    to port 5005 - Gradle will pause execution of tests until you connect.
                     |    
                     |    See readme.md for more details.
                     |
                     |============================================================================
                     '''.stripMargin(),
                project.name,
                project.description ? project.description : ""
        )
    }
}
keyTasks.dependsOn help

publishing {
    publications {
        pluginPublication (MavenPublication) {
            from        components.java

            groupId     project.group
            artifactId  'fs-structure'
            version     project.version
        }
    }
}

tag {
    message {
        "version: ${project.version}"
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}

pitest {
    coverageThreshold = 5
    mutationThreshold = 4
    outputFormats = ['HTML']
}